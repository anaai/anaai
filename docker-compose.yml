version: "3.4"
services:
  redis:
    image: redis:5.0.3-alpine
    container_name: job_orchestrator_redis
    restart: always

  postgres:
    image: postgres
    container_name: job_orchestrator_postgres
    environment:
      - POSTGRES_USER=job_orchestrator
      - POSTGRES_PASSWORD=muchsecurity
      - POSTGRES_DB=jobs
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  job-orchestrator:
    build: kripto-hans-job-orchestrator
    image: job_orchestrator
    container_name: job_orchestrator
    restart: always
    command: celery -A tasks worker --loglevel=INFO
    env_file:
      - kripto-hans-job-orchestrator/.env
    depends_on:
      - postgres
      - redis

  job-service:
    build: kripto-hans-job-service
    image: job_service
    container_name: job_service
    command: uvicorn service:app --host 0.0.0.0 --port 8000
    ports:
      - 8000:8000
    env_file:
      - kripto-hans-job-service/.env
    depends_on:
      - redis

  nft-service:
    build: kripto-hans-service
    image: nft_service
    container_name: nft_service
    command: uvicorn service:app --host 0.0.0.0 --port 7000
    ports:
      - 7000:7000
    env_file:
      - kripto-hans-service/.env

  event-listener:
    build: kripto-hans-event-listener
    image: event_listener
    container_name: event_listener
    command: node event_listener.js
    env_file:
      - kripto-hans-event-listener/.env
